================================================================================
entry
================================================================================
entry Hello: 'hello';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (keyword)))

================================================================================
fragment
================================================================================
fragment Fragment: 'frag';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (keyword)))

================================================================================
wildcard
================================================================================
Hello*: 'hello';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (keyword)))

================================================================================
parameters
================================================================================
Program<Parameter>: 'hello';
Program<Parameter1, Parameter2>: 'hello';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id)
      (parameters
        (id)))
    (keyword))
  (parser_rule_statement
    (rule_name_expression
      (id)
      (parameters
        (id)
        (id)))
    (keyword)))

================================================================================
returns
================================================================================
Hello returns string: 'hello';
HelloOjbect returns Object: 'object';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (returns_expression
      (primitive_type))
    (keyword))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (returns_expression
      (id))
    (keyword)))

================================================================================
infers
================================================================================
Hello infers Object: 'hello';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (infers_expression
      (id))
    (keyword)))

================================================================================
hidden
================================================================================
Hello hidden (Hidden): 'hello';
Hello hidden (Hidden1, Hidden2): 'hello';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (hidden_expression
      (id))
    (keyword))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (hidden_expression
      (id)
      (id))
    (keyword)))

================================================================================
cardinality
================================================================================
Hello: name=ID+;
Hello: 'hello'?;
Hello: 'hello'*;
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (cardinality_expression
      (assignment_expression
        (id)
        (rule_call_expression
          (id)))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (cardinality_expression
      (keyword)))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (cardinality_expression
      (keyword))))
