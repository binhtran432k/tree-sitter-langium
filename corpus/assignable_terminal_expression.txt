================================================================================
keyword
================================================================================
Hello: name='hello';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (keyword))))))

================================================================================
rule call
================================================================================
Hello: name=ID;
Hello: name=ID<Hello>;
Hello: name=ID<Hello,Hi>;
Hello: name=ID<Hello=Hi>;
Hello: name=ID<Hello=Hi|Hey>;
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (rule_call_expression
            (id))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (rule_call_expression
            (id)
            (named_argument_expression
              (parameter_reference)))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (rule_call_expression
            (id)
            (named_argument_expression
              (parameter_reference))
            (named_argument_expression
              (parameter_reference)))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (rule_call_expression
            (id)
            (named_argument_expression
              (id)
              (parameter_reference)))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (rule_call_expression
            (id)
            (named_argument_expression
              (id)
              (disjunction_expression
                (parameter_reference)
                (parameter_reference)))))))))

================================================================================
parenthesized assignable element
================================================================================
Hello: name=('hello');
Hello: name=('hello' | 'world' | '!!!');
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (parenthesized_assignable_element_expression
            (assignable_alternatives_expression
              (keyword)))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (parenthesized_assignable_element_expression
            (assignable_alternatives_expression
              (keyword)
              (keyword)
              (keyword))))))))

================================================================================
cross reference
================================================================================
Hello: type=[World:'hello'];
Hello: type=[World:ID];
Hello: type=[World|ID];
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (builtin_feature_name)
          (cross_reference_expression
            (id)
            (keyword))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (builtin_feature_name)
          (cross_reference_expression
            (id)
            (rule_call_expression
              (id)))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (builtin_feature_name)
          (cross_reference_expression
            (id)
            (rule_call_expression
              (id))))))))
