================================================================================
predicated
================================================================================
Hello: => name=ID;
Hello: -> name=ID;
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (rule_call_expression
            (id))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (rule_call_expression
            (id)))))))

================================================================================
operators
================================================================================
Hello: name=ID;
Hello: name?=ID;
Hello: name+=ID;
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (rule_call_expression
            (id))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (rule_call_expression
            (id))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (rule_call_expression
            (id)))))))

================================================================================
feature name
================================================================================
Hello: name=ID;
Hello: Date=ID;
Hello: entry=ID;
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (id)
          (rule_call_expression
            (id))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (primitive_type)
          (rule_call_expression
            (id))))))
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (assignment_expression
          (builtin_feature_name)
          (rule_call_expression
            (id)))))))
