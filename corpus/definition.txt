================================================================================
group single
================================================================================
Hello: 'hello';
--------------------------------------------------------------------------------

(document
  (parser_rule
    (rule_name
      (id))
    (keyword)))

================================================================================
group multiple
================================================================================
Hello: 'hello' 'world' '!!!';
--------------------------------------------------------------------------------

(document
  (parser_rule
    (rule_name
      (id))
    (group
      (keyword)
      (keyword)
      (keyword))))

================================================================================
alternatives single
================================================================================
Hello: 'hello' | 'world';
--------------------------------------------------------------------------------

(document
  (parser_rule
    (rule_name
      (id))
    (alternatives
      (keyword)
      (keyword))))

================================================================================
alternatives multiple
================================================================================
Hello: 'hello' | ',' 'world' | '!!!';
--------------------------------------------------------------------------------

(document
  (parser_rule
    (rule_name
      (id))
    (alternatives
      (alternatives
        (keyword)
        (group
          (keyword)
          (keyword)))
      (keyword))))

================================================================================
conditional branch
================================================================================
Hello: <Greet> 'hello';
--------------------------------------------------------------------------------

(document
  (parser_rule
    (rule_name
      (id))
    (conditional_branch
      (parameter_reference)
      (keyword))))

================================================================================
conditional branch multiple token
================================================================================
Hello: <Greet> 'hello' 'world';
--------------------------------------------------------------------------------

(document
  (parser_rule
    (rule_name
      (id))
    (conditional_branch
      (parameter_reference)
      (keyword)
      (keyword))))

================================================================================
unordered group
================================================================================
Hello: 'hello' & 'world';
--------------------------------------------------------------------------------

(document
  (parser_rule
    (rule_name
      (id))
    (unordered_group
      (keyword)
      (keyword))))

================================================================================
unordered group multiple
================================================================================
Hello: 'hello' & ',' 'world' & '!!!';
--------------------------------------------------------------------------------

(document
  (parser_rule
    (rule_name
      (id))
    (unordered_group
      (unordered_group
        (keyword)
        (group
          (keyword)
          (keyword)))
      (keyword))))

================================================================================
complex definition
================================================================================
Hello: 'hello' | ',' & 'world' | '!!!';
Hello: 'hello' & ',' | 'world' & '!!!';
--------------------------------------------------------------------------------

(document
  (parser_rule
    (rule_name
      (id))
    (alternatives
      (alternatives
        (keyword)
        (unordered_group
          (keyword)
          (keyword)))
      (keyword)))
  (parser_rule
    (rule_name
      (id))
    (alternatives
      (unordered_group
        (keyword)
        (keyword))
      (unordered_group
        (keyword)
        (keyword)))))
