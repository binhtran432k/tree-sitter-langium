================================================================================
group single
================================================================================
Hello: 'hello';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (keyword_expression
          (string))))))

================================================================================
group multiple
================================================================================
Hello: 'hello' 'world' '!!!';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (group_exression
      (cardinality_expression
        (keyword_expression
          (string)))
      (cardinality_expression
        (keyword_expression
          (string)))
      (cardinality_expression
        (keyword_expression
          (string))))))

================================================================================
alternatives single
================================================================================
Hello: 'hello' | 'world';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (alternatives_expression
      (group_exression
        (cardinality_expression
          (keyword_expression
            (string))))
      (group_exression
        (cardinality_expression
          (keyword_expression
            (string)))))))

================================================================================
alternatives multiple
================================================================================
Hello: 'hello' | ',' 'world' | '!!!';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (alternatives_expression
      (alternatives_expression
        (group_exression
          (cardinality_expression
            (keyword_expression
              (string))))
        (group_exression
          (cardinality_expression
            (keyword_expression
              (string)))
          (cardinality_expression
            (keyword_expression
              (string)))))
      (group_exression
        (cardinality_expression
          (keyword_expression
            (string)))))))

================================================================================
conditional branch
================================================================================
Hello: <Greet> 'hello';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (conditional_branch_expression
      (atom_expression
        (parameter_reference_expression
          (id)))
      (cardinality_expression
        (keyword_expression
          (string))))))

================================================================================
conditional branch multiple token
================================================================================
Hello: <Greet> 'hello' 'world';
--------------------------------------------------------------------------------

(document
  (parser_rule_statement
    (rule_name_expression
      (id))
    (conditional_branch_expression
      (atom_expression
        (parameter_reference_expression
          (id)))
      (cardinality_expression
        (keyword_expression
          (string)))
      (cardinality_expression
        (keyword_expression
          (string))))))
